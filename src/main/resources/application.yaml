application:
  jwt:
    secretKey: 'adonaaranhasubiupelaparedeveioachuvaforteeaderrubouadonaaranhasubiupelaparedeveioachuvaforteeaderrubouadonaaranhasubiupelaparedeveioachuvaforteeaderrubou'
    tokenPrefix: 'Bearer '
    tokenExpirationAfterMinutes: 5
    refreshTokenExpirationAfterDays: 14

spring:
  application:
    name: nexus-hub-application
  datasource:
    url: jdbc:postgresql://localhost:5432/nexushub
    username: nexushub-app
    password: nexushub-app
    driver-class-name: org.postgresql.Driver
    platform: postgres
    testWhileIdle: true
    validationQuery: SELECT 1
    jpa:
      hibernate:
        ddl-auto: update
      properties:
        hibernate:
          dialetc: org.hibernate.dialect.PostgreSQLDialect
          format_sql: true

queries:
  sql:
    subject-dao:
      insert:
        subject: >
          INSERT INTO nexushub_platform.subject(id, name , difficulty, color, owner_id) VALUES (?, ?, ?, ?, ?)
      update:
        subject: >
          UPDATE nexushub_platform.subject SET name=?, difficulty=?, color=? WHERE id=?
      delete:
        subject-by-id: >
          DELETE FROM nexushub_platform.subject WHERE id=?
      exists:
        subject-by-id: >
          SELECT EXISTS(SELECT 1 FROM nexushub_platform.subject WHERE id=?)
      select:
        subject-by-id: >
          SELECT * FROM nexushub_platform.subject WHERE id=?
        subject-all: >
          SELECT * FROM nexushub_platform.subject WHERE owner_id=?
    application-user:
      insert:
        application-user: >
          INSERT INTO nexushub_platform.application_user(id, name, username, password, 
          is_account_non_expired, is_account_nonLocked, is_credentials_non_expired, is_enabled) 
          VALUES (?, ?, ?, ?, ?, ?, ?, ?)

      select:
        application-user-by-username: >
          SELECT * FROM nexushub_platform.application_user WHERE username=?
        application-user-by-id: >
          SELECT * FROM nexushub_platform.application_user WHERE id=?

    deck-dao:
      insert:
        deck: >
            INSERT INTO nexushub_platform.deck(id, name, owner_id, subject_id, parent_deck_id) VALUES (?, ?, ?, ?, ?)
      select:
        deck-by-id: >
          SELECT * FROM nexushub_platform.deck WHERE id=?
        deck-all: >
          SELECT * FROM nexushub_platform.deck WHERE owner_id=?
        deck-children: >
          SELECT * FROM nexushub_platform.deck WHERE parent_deck_id=?;
      update:
        deck: >
          UPDATE nexushub_platform.deck SET name=?, subject_id=?, parent_deck_id=? WHERE id=?
      delete:
        deck-by-id: >
          DELETE FROM nexushub_platform.deck WHERE id=?

    flashcard-dao:
      insert:
        flashcard: >
          INSERT INTO nexushub_platform.flashcard(id, question, answer, next_revision_date, last_revision_date,
          status, maturity, deck_id) VALUES (?, ?, ?, ?, ?, ?::nexushub_platform.flashcard_status, ?, ?)
      select:
        flashcard-by-id: >
          SELECT * FROM nexushub_platform.flashcard WHERE id=?
        flashcard-all: >
          SELECT * FROM nexushub_platform.flashcard WHERE deck_id=?
      update:
        flashcard: >
          UPDATE nexushub_platform.flashcard SET question=?, answer=?, next_revision_date=?, last_revision_date=?,
          status=?::nexushub_platform.flashcard_status, maturity=?, deck_id=? WHERE id=?
      delete:
        flashcard-by-id: >
          DELETE FROM nexushub_platform.flashcard WHERE id=?

    tag-dao:
      insert:
        tag: >
          INSERT INTO nexushub_platform.tag(id, name, owner_id) VALUES (?, ?, ?)
        tag-flashcard: >
            INSERT INTO nexushub_platform.flashcard_tag(flashcard_id, tag_id) VALUES (?, ?)
      select:
        tag-by-id: >
          SELECT * FROM nexushub_platform.tag WHERE id=?
        tag-all: >
          SELECT * FROM nexushub_platform.tag WHERE owner_id=?
        tag-by-flashcard-id: >
          SELECT * FROM nexushub_platform.tag tg INNER JOIN nexushub_platform.flashcard_tag ft ON tg.id = ft.tag_id WHERE ft.flashcard_id=?
      update:
          tag: >
              UPDATE nexushub_platform.tag SET name=? WHERE id=?
      delete:
          tag-by-id: >
              DELETE FROM nexushub_platform.tag WHERE id=?
          tag-flashcard: >
              DELETE FROM nexushub_platform.flashcard_tag WHERE flashcard_id=? AND tag_id=?
